{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAqBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,qBAAqBN,QAAeC,OAE1CM,EAAK,oBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CA5BbL,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAEJ,IAAIV,EAAQW,OAAOhB,EAAKK,MAAMY,OAC9B,MAAMC,EAAOF,OAAOhB,EAAKkB,KAAKD,OACxBE,EAASH,OAAOhB,EAAKmB,OAAOF,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BjB,EAAciB,EAAGf,GACdgB,MAAKC,GAAWxB,EAAAyB,OAAOC,QAAQF,KAC/BG,OAAMC,GAAS5B,EAAAyB,OAAOI,QAAQD,KAEjCrB,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n// const { delay, step, amount } = form;\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(message => Notify.success(message))\n      .catch(error => Notify.failure(error));\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`); //✅\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`); // ❌\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","Number","value","step","amount","i","then","message","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.d03da8e3.js.map"}
{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAqBpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,qBAAoCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEhDM,EAAK,oBAAmCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEjDA,E,IA5BPL,EAAKc,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAMJ,IAJA,IAAIX,EAAQY,OAAOjB,EAAKK,MAAMa,OACxBC,EAAOF,OAAOjB,EAAKmB,KAAKD,OACxBE,EAASH,OAAOjB,EAAKoB,OAAOF,OAEzBG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BlB,EAAckB,EAAGhB,GACdiB,MAAK,SAAAC,G,OAAWzB,EAAA0B,OAAOC,QAAQF,E,IAC/BG,OAAM,SAAAC,G,OAAS7B,EAAA0B,OAAOI,QAAQD,E,IAEjCtB,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n// const { delay, step, amount } = form;\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(message => Notify.success(message))\n      .catch(error => Notify.failure(error));\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`); //✅\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`); // ❌\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","evt","preventDefault","Number","value","step","amount","i","then","message","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.62420b36.js.map"}